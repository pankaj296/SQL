-- FOREIGN KEY  CONSTRAINS 
--==================================================================================================
-- FOREIGN KEY  CONSTRAINS 
--==================================================================================================

CREATE TABLE CUSTOMER11
(
CUSTOMER_ID NUMBER ,
PRODUCT_ID NUMBER REFERENCES PRODUCT (PRODUCT_ID),
CUSTOMER_NAME VARCHAR2(50),
CITY VARCHAR2(20),
JOIN_DATE DATE 
);

ALTER TABLE CUSTOMER11
MODIFY CUSTOMER_ID PRIMARY KEY ;

SELECT * FROM customer11;
DELETE FROM customer11 WHERE product_id = 200; 

INSERT INTO customer11 ( customer_id,product_id,customer_name,city,join_date )
VALUES (5011, 400,'RAJ','MUMBAI ', '01-01-2024');

COMMIT;


-- CONSTRAINS  ON MULTIPAL COLMUN
--==================================================================================================
--  CONSTRAINS  ON MULTIPAL COLMUN
--==================================================================================================

CREATE TABLE SALES_HIST
(
SALES_DATE DATE,
CUSTOMER_ID NUMBER ,
PRODUCT_ID NUMBER ,
QUANTITY NUMBER,
AMOUNT NUMBER ,
CONSTRAINT PRODUCT_DT_PK 
PRIMARY KEY (SALES_DATE , CUSTOMER_ID , PRODUCT_ID )

);

DESC SALES_HIST;

ALTER TABLE SALES_HIST 
ADD CONSTRAINT CONS_NAME 
PRIMARY KEY (SALES_DATE , CUSTOMER_ID , PRODUCT_ID );

ALTER TABLE SALES_HIST DISABLE CONSTRAINT CONS_NAME ;

ALTER TABLE SALES_HIST ENABLE CONSTRAINT PRODUCT_DT_PK;

ALTER TABLE SALES_HIST DROP CONSTRAINT PRODUCT_DT_PK;

--
--1. Create table called MOVIES that stores below columns and enforce a NOT NULL
--constraint on column movie number
-- movie number (accepts only numbers)
-- movie name (accepts numbers and characters and maximum length can be 100)
-- movie type (accepts numbers and characters and maximum length can be 40)
-- movie release date (accepts only dates)

CREATE TABLE MOIVESS
( 
MOIVESS_NUMBER NUMBER (10) NOT NULL ,
MOIVESS_NAME VARCHAR2 (100),
MOIVES_TYPE  VARCHAR2 (40),
MOIVESS_RELEASE_DATE DATE 
);


--2. Create table called MOVIES that stores below columns and enforce a UNIQUE constraint
--on column movie number
-- movie number (accepts only numbers)
-- movie name (accepts numbers and characters and maximum length can be 100)
-- movie type (accepts numbers and characters and maximum length can be 40)
-- movie release date (accepts only dates)

CREATE TABLE MOIVESS1
( 
MOIVESS_NUMBER NUMBER (10) UNIQUE ,
MOIVESS_NAME VARCHAR2 (100),
MOIVES_TYPE  VARCHAR2 (40),
MOIVESS_RELEASE_DATE DATE 
);




--3. Create table called MOVIES that stores below columns and enforce a PRIMARY KEY
--constraint on column movie number
-- movie number (accepts only numbers)
-- movie name (accepts numbers and characters and maximum length can be 100)
-- movie type (accepts numbers and characters and maximum length can be 40)
-- movie release date (accepts only dates)

CREATE TABLE MOIVESS2
( 
MOIVESS_NUMBER NUMBER (10) PRIMARY KEY  ,
MOIVESS_NAME VARCHAR2 (100),
MOIVES_TYPE  VARCHAR2 (40),
MOIVESS_RELEASE_DATE DATE 
);



--4. Create table called MOVIES that stores below columns and enforce a CHECK constraint
--on column movie type (values allowed are COMEDY and ACTION)
-- movie number (accepts only numbers)
-- movie name (accepts numbers and characters and maximum length can be 100)
-- movie type (accepts numbers and characters and maximum length can be 40)
-- movie release date (accepts only dates)

CREATE TABLE MOIVESS3
( 
MOIVESS_NUMBER NUMBER (10)  ,
MOIVESS_NAME VARCHAR2 (100),
MOIVES_TYPE  VARCHAR2 (40) CHECK ( MOIVES_TYPE IN ('COMEDY','ACTION')) ,
MOIVESS_RELEASE_DATE DATE 
);




--5. Create table called MOVIES that stores below columns and enforce a foreign key
--constraint on column movie director number which references table DIRECTOR and
--column DIRECTOR_NUMBER.
-- movie number (accepts only numbers)
-- movie name (accepts numbers and characters and maximum length can be 100)
-- movie type (accepts numbers and characters and maximum length can be 40)
-- movie release date (accepts only dates)
-- movie director number (accepts only numbers)

CREATE TABLE MOIVESS4
( 
MOVIESS_DIRECTOR_NUMBER  NUMBER  REFERENCES  DIRECTOR(DIRECTOR_NUMBER)   ,
MOIVESS_NUMBER NUMBER (10)  ,
MOIVESS_NAME VARCHAR2 (100),
MOIVES_TYPE  VARCHAR2 (40) CHECK ( MOIVES_TYPE IN ('COMEDY','ACTION')) ,
MOIVESS_RELEASE_DATE DATE 
);

CREATE TABLE DIRECTOR
(
DIRECTOR_NAME VARCHAR2(10),
DIRECTOR_NUMBER NUMBER PRIMARY KEY 
);


